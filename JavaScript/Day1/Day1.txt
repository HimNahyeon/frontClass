자바스크립트

최초의 브라우저 -> 넷스케이프 -> 넷스케이프(브랜던 아이크, 모카 -> 라이브 스크립트 -> 자바스크립트)
  (모자이크)

- 소스코드를 복원한 익스플로러(90% ~ jscript)
- jQuery(버전, 브라우저 표준화 라이브러리)

- 크롬(v8엔진 탑재 기술) 등장.
- 표준화 -> ECMA Script : 표준화된 스크립트의 결론적인 이름.  자바스크립트는 이크마스크립트의 문법을 따르고 있다.
            ECMA Script ~ 5 (현재 브라우저가 표준화 하여 적용) -> ECMA Script6(브라우저 컴파일)

자바스크립트의 특징
- 웹 브라우저에 자바스크립트 엔진이 내장되어 있기 때문에 사용이 가능
- 웹의 동적 구현을 하기 위한 언어
- 대소문자를 구별
- 객체 기반의 스크립트 언어
- HTML문서 내에서 <script> ~ </script> 태그 안에 작성
- 웹 브라우저에서 동작, 운영체제에서도 동작(node.js)

자바스크립트의 출력
1. 문서 출력
    document.write() 함수를 통해 <body>에 출력
        ↑
    문서 객체 로 바디부분에 구현되는 모든 기능을 가지고 있다.

2. 콘솔 출력 
    console.log() 함수를 통해 브라우저 콘솔에 출력


자바스크립트의 주석
한줄주석 : //
여러줄 주석 : /* */

외부 자바스크립트 사용
<script src="자바스크립트 파일 경로"></script>

🎁
- JavaScript (ES6) code snippets
- Code Spell Checker
- Bracket Pair colorizer2(브라켓 = 중괄호 색)
- material icon theme
- material theme ( 파일 -> 기본설정 -> 색테마)
- prettier(주석 색 변경 가능)

프로그래밍
- 컴퓨터의 프로그램을 작성하는 일. 일반적으로는 프로그램의 작성 방법의 결정, 코딩(Coding), 에러 수정 등의 작업 모두를 가리키지만 코딩만을 가리킬 때도 있음.

변수(variable)

CPU : 뇌 (연산,제어)
RAM(메모리) : 임시기억
HDD(하드디스크, USB...) : 영구기억

- 데이터를 저장할 수 있는 메모리 공간


let 변수명;     // 변수를 선언
let num;

변수명 = 값/     // 변수의 초기화
num = 10;

1et 변수명 = 값 //변수의 선언 및 초기화
let num = 10;

✔ var를 사용하지 않는 이유
- 같은 이름의 변수를 선언할 수 있음
- 지역변수와 전역변수의 구별이 모호.  따라서 let을 쓴다.
    ex) 
        var num = 10;

        if(true){
            var num=5;
        }
        console.log(num);         -> 원래는 10이 나와야하는데 자바스크립트에 5가나옴 ... ;; 에러


✔ babel
- 트렌스 컴파일러


✔ use strict
- strict mode를 사용한다는 의미
- 코드를 엄격하게 사용하도록 함
    ex)
        <script>
        'use strict'
        ...
        </script>

상수(constant)
- 한번 선언된 상수는 다시 재정의 할 수 없으며, 값도 재할당 할 수 없음

let num;
num = 10;

let num =10;
num 5;

const num = 10;
num = 5; //에러~

const num;
num = 10; //에러  위에서 값이 없다고 상수로 선언해버렸기 때문에!!