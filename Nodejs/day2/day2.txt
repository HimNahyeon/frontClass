프로젝트 복원 
    npm install

express 모듈
    use() : 미들웨어를 등록
    redirect() : 웹페이지의 경로를 강제로 이동
    
    //http://127.0.0.1:3000/?userid=apple
    php : $userid = $_GET['userid'];
    node.js : const userid = req.query.userid;

    query : 클라이언트에서 get 방식으로 전송한 요청 파라미터를 확인
    body : 클라이언트에서 post 방식으로 전송한 요청 파라미터를 확인
        * 단 post 방식을 통한 요청 파라미터를 확인하려면 body-parser와 같은 모듈을 사용해야 한다.
    
        post방식은 url에 못싣기때문에 form에 감싸서 아래와같이 보내야함
        <form method="post" action="./">
            ....
        </form>

    * app.use(bodyParser.urlencoded({extended:false}));
        bodyParser 미들웨어의 여러 옵션 중에 extended를 false로 설정하면 node.js에 기본으로 내장된
        queryString이 true일 때 따로 설치가 필요한 npm ps 라이브러리를 사용

        queryString, qs
        두개가 같이 탑재돼 있으면 충돌해서 값을 못받아옴. 그래서 extended를 false 로 기능을 꺼줌(qureyString안의 기능을 사용)

    포스트맨
    https://www.postman.com





REST (Representational State Transfer)
    자원을 이름으로 구분하여 해당 자원의 상태를 주고 받는 것을 의미


Router 미들웨어
    - 사용자의 다양한 요청이 들어왔을 때 use() 메소드로 설정한 미들웨어가 항상 호출되는 불편한 점을 개선하여 만들어진 모듈

Router 객체
    
    const 객체명 = express.Router();

    <구분에 따라서 실행할 함수를 다르게 호출 - > 라우터 >
    객체명.route('/호출할URL').get(실행할 함수);
    객체명.route('/호출할URL').post(실행할 함수);

익스프레스에 Router 객체 적용
    app.use('/', 객체명);


템플릿 엔진
    - view를 구현하기 위한 템플릿
    - 종류가 엄청많은데 우리는 오늘 두가지만 알아보자

    1. EJS(Embedded JavaScript)모듈
        - 특정한 형식인 파일로부터 html페이지를 생성하는 모듈
        - npm i ejs   터미널에 입력   (설치)

    2. 

    